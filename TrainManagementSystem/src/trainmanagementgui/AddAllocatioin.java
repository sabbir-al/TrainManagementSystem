package trainmanagementgui;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;



public class AddAllocatioin extends javax.swing.JFrame {

    myDBCon dbCon;
    ResultSet rs, rs2;

   
    public AddAllocatioin(){
        initComponents();
        
        // center form in screen 
        this.setLocationRelativeTo(null);

        lblDepartureTime.setVisible(false);
        lblTicketCost.setVisible(false);

        
      
        dbCon = new myDBCon();
        
        try {
            
            rs = dbCon.executeStatementQuery("SELECT TrainName FROM TRAINLINE ORDER BY TrainID ASC");

            // populate mgr combo box
            while (rs.next()) {
                cmbTrainLine.addItem(rs.getString("TrainName"));
                
            }
            
            rs = dbCon.executeStatementQuery("SELECT ROUTES.RouteID, LOCATION.StationName\n" +
                "FROM ROUTES\n" +
                "INNER JOIN LOCATION ON ROUTES.Origin=LOCATION.LocationID\n" +
                "ORDER BY ROUTES.RouteID ASC");
            rs2 = dbCon.executeStatementQuery("SELECT ROUTES.RouteID, LOCATION.StationName\n" +
                "FROM ROUTES\n" +
                "INNER JOIN LOCATION ON ROUTES.Destination=LOCATION.LocationID\n" +
                "ORDER BY ROUTES.RouteID ASC");
            
            while(rs.next()&&rs2.next()){
                cmbRoute.addItem(rs.getString("StationName") + " -> "+rs2.getString("StationName"));
            }

            rs.close();
            rs2.close();
           
        } catch (SQLException e) {
            System.out.println(e);
        }
        
        getNewRouteId();
    }
    
        public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }


    
        private void getNewRouteId() {

        String str;
        try {
            // populate CustomerID field
            rs = dbCon.executeStatementQuery("select MAX(AllocationID) as AllocationID from ALLOCATION");
        
            while (rs.next()) {
                str = rs.getString("AllocationID");
                if (str==null){
                    txtAllocationID.setText("1");
                }
                else{
                    int temp = Integer.parseInt(str);
                    txtAllocationID.setText(String.valueOf(++temp));
                }
            }


        } catch (SQLException e) {
            javax.swing.JLabel label = new javax.swing.JLabel("SQL Error - Error Generating AllocationID");
            label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
            JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
        
    void clearErrorLabels() {
        lblDepartureTime.setText("");
        lblDepartureTime.setVisible(false);
        lblTicketCost.setText("");
        lblTicketCost.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDepartureTime = new javax.swing.JTextField();
        btnAddNewEmp = new javax.swing.JButton();
        cmbTrainLine = new javax.swing.JComboBox<>();
        cmbRoute = new javax.swing.JComboBox<>();
        lblDepartureTime = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtAllocationID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTicketCost = new javax.swing.JTextField();
        lblTicketCost = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Employee");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Allocation");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Allocation ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("TrainLine:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Route:");

        txtDepartureTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAddNewEmp.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAddNewEmp.setText("Create Journey");
        btnAddNewEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewEmpActionPerformed(evt);
            }
        });

        cmbTrainLine.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbRoute.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblDepartureTime.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblDepartureTime.setForeground(new java.awt.Color(255, 0, 0));
        lblDepartureTime.setText("error label");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Departure Time:");

        txtAllocationID.setEditable(false);
        txtAllocationID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Ticket Cost ($) : ");

        txtTicketCost.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblTicketCost.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblTicketCost.setForeground(new java.awt.Color(255, 0, 0));
        lblTicketCost.setText("error label");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(201, 201, 201))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAddNewEmp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDepartureTime)
                            .addComponent(txtTicketCost, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTicketCost, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                            .addComponent(lblDepartureTime, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cmbTrainLine, javax.swing.GroupLayout.Alignment.LEADING, 0, 299, Short.MAX_VALUE)
                            .addComponent(txtAllocationID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbRoute, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAllocationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbTrainLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbRoute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDepartureTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDepartureTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTicketCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTicketCost)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(btnAddNewEmp)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    boolean isValidData() {
        clearErrorLabels(); 
        boolean result = true;
       

        if (!txtDepartureTime.getText().trim().matches("[0-1][0-9]:[0-5][0-9] [A|P]M") || txtDepartureTime.getText().trim().isEmpty()) {
            
            lblDepartureTime.setText("Invalid format. Format Eg. 12:00 PM ");
            lblDepartureTime.setVisible(true);
            result = false;
        }
        
         if (txtTicketCost.getText().trim().isEmpty() || !(isInteger(txtTicketCost.getText().trim()))) {
            if (txtTicketCost.getText().trim().isEmpty()) {
                lblTicketCost.setText("Invalid. Cannot be empty.");
            } else if (!(isInteger(txtTicketCost.getText().trim()))) {
                lblTicketCost.setText("Invalid. Must be number.");
            }

            lblTicketCost.setVisible(true);
            result = false;
        }
       
        return result;
    }



    private void btnAddNewEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewEmpActionPerformed
        // TODO add your handling code here:

        try {

                
            if (isValidData()) {
                
                //Checks if the Allocation already exists in the table
                String[] routes = cmbRoute.getSelectedItem().toString().split(" -> ");
                
                
                rs = dbCon.executeStatementQuery("Select * from allocation where TrainId = (select TrainID from TRAINLINE where TrainName = '" +cmbTrainLine.getSelectedItem().toString() + "') and RouteID = (select routeID from Routes \n" +
"where origin = (select locationID from location where StationName = '"+routes[0] +"' ) \n" +
"and destination = (select locationID from location where StationName = '"+routes[1] +"' )) and DepartureTime = '"+txtDepartureTime.getText() +"'");
                
                if(!rs.next()){
                    int trainid, routeid;
                    rs = dbCon.executeStatementQuery("select TrainID from TRAINLINE where TrainName = '" +cmbTrainLine.getSelectedItem().toString() + "'");
                    rs.next();
                    trainid = rs.getInt("TrainID");
                    
                    rs = dbCon.executeStatementQuery("select routeID from Routes where origin = (select locationID from location where StationName = '"+routes[0] +"') " + "and destination = (select locationID from location where StationName = '"+routes[1] +"')");
                    rs.next();
                    routeid = rs.getInt("routeID");
                    
                         
                    
                    String prepareSQL = "INSERT INTO ALLOCATION (AllocationID, TrainID, RouteID, DepartureTime,TicketCost) VALUES ("
                        + Integer.parseInt(txtAllocationID.getText())
                        + ", " +trainid
                        + ", " + routeid+", '"+txtDepartureTime.getText()+"', " +Double.parseDouble(txtTicketCost.getText())+ ")";
          


                    int result = dbCon.executePreparedStmnt(prepareSQL);

                    if (result > 0) {

                        javax.swing.JLabel label = new javax.swing.JLabel("New Allocation added successfully.");
                        label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                        JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);

                        this.dispose();
                    } else {
                        // check validation errors 
                    }      
                }
                else{
                    JOptionPane.showMessageDialog(this, "Same Allocation Already Exists!!");
                }
                
               
                


            } else {

                javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);

            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error adding new allocation. "+ e);
        }
    }//GEN-LAST:event_btnAddNewEmpActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewEmp;
    private javax.swing.JComboBox<String> cmbRoute;
    private javax.swing.JComboBox<String> cmbTrainLine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblDepartureTime;
    private javax.swing.JLabel lblTicketCost;
    private javax.swing.JTextField txtAllocationID;
    private javax.swing.JTextField txtDepartureTime;
    private javax.swing.JTextField txtTicketCost;
    // End of variables declaration//GEN-END:variables
}
